//Basic struct
struct A
//Struct with member property
struct A{
	val string = "Hello world!"
}
//Struct with member function
struct A{
	fun f{
		println("Hello world!")
	}
}
//Struct with constructor parameters
struct A(string: String)
//Struct with constructor member property
struct A(val string: String)
//Struct with constructor member property and member function
struct A(val string: String){
	fun f{
		println(this.string)
	}
}
//Struct with constructor and constructor body
struct A(string: String){
	init{
		println(string)
	}
}
//Struct with trait implementation
trait T1{
	val string: String
}
struct A with T1{
	impl val string: String = "Hello world!"
}
//Struct with abstract type implementation
type A{
	val string: String
}
def struct B with A{
	impl val string = "Hello world!"
}
//Struct with dropper
def struct A{
	drop{
		println("Dropping instance of A out of memory")
	}
}